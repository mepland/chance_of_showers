# This workflow will install Python dependencies and run tests
# For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: tests

on:  # yamllint disable-line rule:truthy
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.5"]

    steps:
      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install Dependencies
        run: poetry install --with daq,web,ana,dev

      - name: poetry
        run: poetry check && poetry lock --no-update

      - name: isort
        run: poetry run isort .

      - name: black
        run: poetry run black --check --diff .

      - name: blacken-docs
        run: poetry run blacken-docs --line-length=100 $(git ls-files '*.py') $(git ls-files '*.md') $(git ls-files '*.rst')  # yamllint disable-line rule:line-length

      - name: flake8
        run: poetry run flake8 --version && poetry run flake8

      - name: mypy
        run: poetry run mypy .

      - name: pylint
        run: poetry run pylint $(git ls-files '*.py')

      - name: bandit
        run: poetry run bandit -r .

      - name: detect-secrets
        run: poetry run detect-secrets-hook --exclude-lines 'integrity='

      - name: vulture
        run: poetry run vulture

      - name: pyupgrade
        run: poetry run pyupgrade

      - name: yamllint
        run: poetry run yamllint -c .dev_config/.yamllint.yaml --strict .

      - name: blocklint
        run: poetry run blocklint --skip-files=poetry.lock --max-issue-threshold=1

      - name: markdownlint-cli
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: .
          dot: true
          config_file: .dev_config/.markdownlint.yaml
          ignore_files: LICENSE.md
