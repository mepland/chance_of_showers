#!/usr/bin/env bash

pkg_path="/home/mepland/chance_of_showers"

# n_iter: How many iterations of Bayesian optimization to perform.
# This is the number of new models to train, in addition to any duplicated or reloaded points.
n_iter=100

# Maximum number of points to generate
# Will stop script early if reached before n_iter, for example when resuming a run.
max_points=200

# Turn on tdqm
export TQDM_DISABLE=0
# Turn off tqdm
# export TQDM_DISABLE=1

# Check for running drive_bayesian_opt.py
if pgrep -fc "python.*?drive_bayesian_opt.py" > /dev/null 2>&1; then
	echo "Found python drive_bayesian_opt.py running, doing nothing"
	exit
fi

# Run drive_bayesian_opt.py n_iter times, or until max_points is reached
n_points=0
for ((i_iter = 1; i_iter <= n_iter; i_iter++)); do
	# Add \r to start to backup one line, if drive_bayesian_opt.py is printing nothing out
	printf "Starting drive_bayesian_opt.py %d of %d, currently have %d points\n" "$i_iter" "$n_iter" "$n_points"

	poetry run python -u $pkg_path/ana/drive_bayesian_opt.py
	status=$?
	n_points=$((status - 10))

	if [[ $status -lt 10 ]]; then
		echo "On i_iter = $i_iter, found status = $status, an exception occurred, halting!"
		exit $status
	elif [[ $max_points -le $n_points ]]; then
		echo "On i_iter = $i_iter, found $n_points >= $max_points points, finished"
		exit
	fi

done
